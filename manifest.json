{
    "author": "Xiaoqian Xiao",
    "command": "poetry run python run.py",
     "inputs": {
        "pipelines_file": {
            "description": "Json files with pipeline used for denoising",
            "base": "file",
            "optional": true
        },
      "api-key": {
          "base": "api-key",
          "read-only": true
        }
    },
    "config": {
        "subjects": {
            "default": "",
            "description": "Subject's ID for subjects you want to included in the analysis",
            "type": "string"
        },  
        "pipelines_name": {
            "default": "Not choosing the package set pipelines",
            "description": "Pipeline name used for denoising from package",
            "type": "string"
        },    
        "use_custom_pipeline": {
            "default": false,
            "description": "check if you want to custom the denoise pipeline here",
            "type": "boolean"
        },
        "gear-dry-run": {
            "default": true,
            "description": "Do everything except actually executing the command line",
            "type": "boolean"
        },
        "motion": {
            "default": false,
            "description": "add motion or not",
            "type": "boolean"
        },
        "motion-temp_deriv": {
            "default": false,
            "description": "add motion temp_deriv or not",
            "type": "boolean"
        },
        "motion-quad_terms": {
            "default": false,
            "description": "add motion quad_terms or not",
            "type": "boolean"
        },
        "wm": {
            "default": false,
            "description": "add white matter or not",
            "type": "boolean"
        },
        "wm-temp_deriv": {
            "default": false,
            "description": "add white matter temp_deriv or not",
            "type": "boolean"
        },
        "wm-quad_terms": {
            "default": false,
            "description": "add white matter quad_terms or not",
            "type": "boolean"
        },
        "csf": {
            "default": false,
            "description": "add csf or not",
            "type": "boolean"
        },
        "csf-temp_deriv": {
            "default": false,
            "description": "add csf temp_deriv or not",
            "type": "boolean"
        },
        "csf-quad_terms": {
            "default": false,
            "description": "add csf quad_terms or not",
            "type": "boolean"
        },
        "gs": {
            "default": false,
            "description": "add global signal or not",
            "type": "boolean"
        },
        "gs-temp_deriv": {
            "default": false,
            "description": "add global signal temp_deriv or not",
            "type": "boolean"
        },
        "gs-quad_terms": {
            "default": false,
            "description": "add global signal quad_terms or not",
            "type": "boolean"
        },
        "acompcor": {
            "default": false,
            "description": "add acompcor or not",
            "type": "boolean"
        },
        "aroma": {
            "default": false,
            "description": "add aroma or not",
            "type": "boolean"
        },
        "spikes": {
            "default": false,
            "description": "add spikes or not",
            "type": "boolean"
        },
        "fd_th": {
            "default": 0.5,
            "description": "framewise_displacement threshold, numeric which scans have fd greater thant it will be identified as outliers.",
            "type": "number"
        },
        "dvars_th": {
            "default": 3,
            "description": "std_dvars threshold, numeric which scans have std_dvars greater thant it will be identified as outliers.",
            "type": "number"
        }
    },
    "custom": {
        "gear-builder": {
            "category": "analysis",
            "image": "xiaoqianxiao/fw_restingfmri_denoise:0.1.1"
        }
    },
    "description": "RestingfMRI_Denoising is a python based tool using fmriprep output to denoise resting state fMRI data",    
    "environment": {       
        "LD_LIBRARY_PATH": "/usr/lib/x86_64-linux-gnu:/opt/conda/lib:", 
        "HOME": "/home/RestingfMRI_Denoise", 
        "PYTHONNOUSERSITE": "1", 
        "FLYWHEEL": "/flywheel/v0", 
        "PATH": "/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", 
        "LANG": "C.UTF-8", 
        "DEBIAN_FRONTEND": "noninteractive", 
        "IS_DOCKER_8395080871": "1", 
        "LC_ALL": "C.UTF-8", 
        "PWD": "/flywheel/v0", 
        "CPATH": "/opt/conda/include:"
    },
    "label": "restingfmri-denoise",
    "license": "Other",
    "maintainer": "Xiaoqian <xiaoqian@stanford.edu>",
    "name": "restingfmri-denoise",
    "source": "https://github.com/XiaoXiaoqian/RestingfMRI_Denoise.git",
    "version": "0.1.18",
    "url": "https://github.com/XiaoXiaoqian/flywheel_RestingfMRI_Denoise/blob/main/README.md"
}
